.articles {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.content {
  --contentWidth: 640px;

  display: grid;
  grid-template-columns: minmax(0, var(--contentWidth));
  padding-top: var(--spaceOuter);
  padding-bottom: var(--space4XL);
  gap: var(--space2XL);

  @media (--mediaLaptop) {
    --contentWidth: 560px;
  }

  @media (--mediaTablet) {
    --contentWidth: 480px;
  }

  @media (--mediaMobile) {
    padding-top: 100px;
  }
}

.header {
  padding: var(--spaceM) 0;
  display: flex;
  justify-content: space-between;
}

.list {
  display: grid;
  gap: var(--space4XL);

  @media (--mediaTablet) {
    gap: var(--space3XL);
  }
}

.post {
  --backgroundOutset: var(--space3XL);

  position: relative;
  isolation: isolate;

  &[data-featured='true'] {
    margin: var(--backgroundOutset) 0;
  }

  @media (--mediaTablet) {
    --backgroundOutset: var(--spaceXL);
  }

  @media (--mediaMobile) {
    --backgroundOutset: var(--spaceOuter);
  }
}

.postContent {
  display: flex;
  position: relative;

  &[data-featured='false']::before {
    content: '';
    position: absolute;
    inset: calc(var(--spaceXL) * -1);
    background-color: rgb(var(--rgbBackgroundLight));
    opacity: 0;
    transition: opacity var(--durationM) ease;
    clip-path: polygon(
      0 0,
      100% 0,
      100% calc(100% - 24px),
      calc(100% - 24px) 100%,
      0 100%
    );

    &:hover {
      opacity: 1;
    }
  }
}

.postDate {
  display: grid;
  grid-template-columns: 128px 1fr;
  gap: var(--spaceM);
  align-items: center;
  color: rgb(var(--rgbPrimary));
  justify-self: stretch;
  margin-bottom: var(--spaceS);
}

.postImage {
  position: absolute;
  inset: calc(var(--backgroundOutset) * -1);
  display: grid;
  place-content: center;
  overflow: hidden;
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 32px), calc(100% - 32px) 100%, 0 100%);
  isolation: isolate;

  &::after {
    content: '';
    position: absolute;
    inset: 0;
    mix-blend-mode: luminosity;
    background-image: linear-gradient(
      90deg,
      rgb(var(--rgbBackgroundLight) / 0.87) 0%,
      rgb(var(--rgbBackgroundLight) / 0.82) 30%,
      rgb(var(--rgbBackgroundLight) / 0.6) 100%
    );
  }
}

.postDetails {
  position: relative;
  display: grid;
  justify-items: start;
  gap: var(--spaceL);
}

.postFooter {
  display: grid;
  grid-auto-flow: column;
  justify-content: space-between;
  justify-self: stretch;
}

.timecode {
  display: flex;
  align-items: center;
  gap: var(--spaceM);

  &::before {
    content: '';
    width: 42px;
    height: 2px;
    background-color: rgb(var(--rgbText) / 0.2);
  }
}
